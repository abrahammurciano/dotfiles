#!/usr/bin/env bash

set -euo pipefail

show_help() {
    cat << EOF
fleet-db - Connect to the Fleet database

USAGE:
    fleet-db [OPTIONS] [ENVIRONMENT]
    fleet-db -h|--help

DESCRIPTION:
    Connects to the Fleet database for the specified environment.

ARGUMENTS:
    ENVIRONMENT    The environment to connect to: 'dev' or 'prod' (default: dev)

OPTIONS:
    -h, --help     Show this help message and exit
    -v, --verbose  Enable verbose output (debug mode)

EXAMPLES:
    fleet-db           Connect to development database
    fleet-db dev       Connect to development database
    fleet-db prod      Connect to production database
    fleet-db -v prod   Connect to production database with verbose output

EOF
}

parse_args() {
    ENV="dev"

    while [[ $# -gt 0 ]]; do
        case $1 in
            -h|--help)
                show_help
                exit 0
                ;;
            -v|--verbose)
                set -x
                shift
                ;;
            *)
                ENV="$1"
                shift
                ;;
        esac
    done
}

aws_login() {
	local profile_args="$1"
	if aws sts get-caller-identity $profile_args &>/dev/null; then
		return
	fi
	cloud-ssov2
}

output_key() {
    local env="$1"
    if [[ "$env" == "prod" ]]; then
        echo "ProdBastionInstanceId"
    else
        echo "DevBastionInstanceId"
    fi
}

aws_profile_args() {
    local env="$1"
    if [[ "$env" == "prod" ]]; then
        echo "--profile fleet"
    else
        echo ""
    fi
}

bastion_instance_id() {
    local env="$1"
    aws cloudformation describe-stacks --stack-name "fleet-api-stack-$env" $(aws_profile_args "$env") --query "Stacks[0].Outputs[?OutputKey=='$(output_key "$env")'].OutputValue" --output text
}

connect_to_bastion() {
    local env="$1"
    local instance_id="$2"
    aws ssm start-session --target "$instance_id" --document-name "AWS-StartInteractiveCommand" --parameters "command=db" $(aws_profile_args "$env")
}

main() {
    parse_args "$@"
	aws_login "$(aws_profile_args "$ENV")"
    local instance_id=$(bastion_instance_id "$ENV")

    echo "Connecting to bastion instance $instance_id in $ENV environment..."
    connect_to_bastion "$ENV" "$instance_id"
}

main "$@"
